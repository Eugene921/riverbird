{"version":3,"sources":["src/js/slider.js","src/js/API_form.js","src/js/index.js"],"names":["APIslider","constructor","props","viewPort","sliderBar","position","classForShowImg","init","goTo","children","classList","remove","add","replaseImgInVeivport","i","length","appendChild","firstChild","cloneNode","addListenerForBar","addEventListener","e","target","title","slider","document","getElementById","sliderSeconr","sliderThird","APIForn","addValidColor","elem","value","validity","valid","style","required","elemForm","headLineTelegram","window","location","href","elemPhoneNumber","querySelector","elemEmail","elemName","elemCity","elemWarehouseIndex","elemDescription","botTelegramToken","telegramChatId","apiKeyNovaPoshta","listWarehousesNP","listRefCities","inut","addListnerOnPhoneNumber","inputType","phoneNumberValue","slice","isNaN","data","changePhoneNumber","strFormat","addListnerOnSubmit","preventDefault","message","placeholder","console","log","initiatoryStatePhoneNumber","pattern","initiatoryStateEmail","createElemListCity","elemListCity","createElement","id","createElemListWarehouses","elemListWarehouses","updateListCity","listCitiesNP","innerHTML","DeliveryCity","disabled","map","city","elemOption","Present","push","updateListWarehouses","filterlistWarehouses","warehouse","Description","getCitiesFromNP","requestOptions","method","mode","cache","headers","redirect","body","JSON","stringify","fetch","then","response","json","result","Addresses","cities","filter","Warehouses","catch","error","getWarehousesFromNP","filterWritelistWarehouses","num","Number","initiatoryStateCity","test","initiatoryStateName","initiatoryStateDescription","initiatoryStateWarehouseIndex","form","onload","setTimeout","headlineQuestion","orderForm","description","headline","accessories","specifications","isVisible","up","clientHeight","offsetTop","scrollY","down","innerHeight","onscroll","btnAsk","btnBuy","check","call","func","delay","timerStart","postAlert","sectionBuy","phoneBtnBuy","btnClosseBuy","btnMenu","phoneMenu","listNavPhoneMenu","toggle"],"mappings":"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","file":"js.4ae8c252.js","sourceRoot":"..","sourcesContent":["class APIslider {\n  constructor(props) {\n    this.viewPort = props.viewPort;\n    this.sliderBar = props.sliderBar;\n\n    this.position = 0;\n\n    this.classForShowImg = props.classForShowImg;\n\n    this.init();\n  }\n\n  goTo(position) {\n    this.viewPort.children[this.position].classList.remove(this.classForShowImg);\n\n    this.position = position;\n\n    this.viewPort.children[this.position].classList.add(this.classForShowImg);\n  }\n\n  replaseImgInVeivport(){\n    for (let i = 0; i < this.sliderBar.length; i++) {\n      this.viewPort.appendChild(this.sliderBar[i].firstChild.cloneNode(false));\n    }\n  }\n\n  addListenerForBar() {\n    for (let i = 0; i < this.sliderBar.length; i++) {\n      this.sliderBar[i].firstChild.addEventListener('click', e => {\n        this.goTo(e.target.title);\n      });\n    };\n  }\n\n  init(){\n    this.replaseImgInVeivport();\n    this.addListenerForBar();\n    this.goTo(this.position);\n  }\n}\n\nconst slider = new APIslider({\n  viewPort: document.getElementById('specifications_viev_port'),\n  sliderBar: document.getElementById('specifications_bar').children,\n  classForShowImg: 'slider_view',\n})\n\nconst sliderSeconr = new APIslider({\n  viewPort: document.getElementById('accessories_viev_port'),\n  sliderBar: document.getElementById('accessories_bar').children,\n  classForShowImg: 'slider_view',\n})\n\nconst sliderThird = new APIslider({\n  viewPort: document.getElementById('description_viev_port'),\n  sliderBar: document.getElementById('description_bar').children,\n  classForShowImg: 'slider_view',\n})\n","class APIForn {\n\n\n  static addValidColor(elem) {    \n    if (!elem.value.length){\n\n      if (elem.required) {\n        elem.style = 'border-color: orange;'\n      } else {\n        elem.style = 'border-color: deepskyblue;'\n      };\n    } else {\n\n      if(elem.validity.valid) {\n        elem.style = 'border-color: lawngreen;'\n      } else {\n        if (elem.required) {\n          elem.style = 'border-color: red;'\n        } else {\n          elem.style = 'border-color: orange;'\n        }\n      };\n    }\n  }\n\n  constructor(props) {\n    this.elemForm = props.elemForm;\n\n    this.headLineTelegram = props.headLineTelegram || `sent from the form located at ${window.location.href}`;\n\n    this.elemPhoneNumber = props.elemPhoneNumber || this.elemForm.querySelector('input[type=\"tel\"]') || false;\n    this.elemEmail = props.elemEmail || this.elemForm.querySelector('input[type=\"email\"]') || false;\n    this.elemName = props.elemName || this.elemForm.querySelector('input[name=\"name\"]') || false;\n    // this.elemArea = props.elemArea || this.elemForm.querySelector('input[name=\"area\"]') || false;\n    this.elemCity = props.elemCity || this.elemForm.querySelector('input[name=\"city\"]') || false;\n    this.elemWarehouseIndex = props.elemWarehouseIndex || this.elemForm.querySelector('input[name=\"warehouseIndex\"]') || false;\n    this.elemDescription = props.elemDescription || this.elemForm.querySelector('textarea') || false;\n\n    // this.elemBtnSubmit = props.elemBtnSubmit || this.elemForm.querySelector('input[type=\"submit\"]') || false;\n\n    // this.inputEmail = this.elemForm.querySelector('input[type=\"email\"]') || null;\n    // this.input = props.inputPhoneNumber;\n    this.botTelegramToken = props.botTelegramToken || false;\n    this.telegramChatId = props.telegramChatId || false;\n\n    this.apiKeyNovaPoshta = props.apiKeyNovaPoshta || false;\n    this.listWarehousesNP = [];\n    this.listRefCities = [];\n\n    this.inut();\n  }\n\n  addListnerOnPhoneNumber() {\n    this.elemPhoneNumber.addEventListener('input', e => {\n      if( e.inputType === 'deleteContentBackward'){\n\n        if(this.phoneNumberValue[0] !== '_') {\n\n          this.phoneNumberValue = this.phoneNumberValue.slice(0, this.phoneNumberValue.length - 1);\n        }\n      } else {\n        if(!isNaN(e.data) && e.data !== ' ' && this.phoneNumberValue.length <= 9) {\n\n          this.phoneNumberValue += e.data;\n        }\n      }\n      this.changePhoneNumber();\n      APIForn.addValidColor(this.elemPhoneNumber);\n    });\n  }\n\n  changePhoneNumber() {\n    const strFormat = this.phoneNumberValue + '__________';\n\n    this.elemPhoneNumber.value = `+38 (${strFormat.slice(0, 3)}) ${strFormat.slice(3, 6)}-${strFormat.slice(6, 8)}-${strFormat.slice(8, 10)}`;\n  }\n\n  addListnerOnSubmit() {\n    this.elemForm.addEventListener('submit', e => {\n      e.preventDefault();\n\n      let message = `____________________%0A${this.headLineTelegram} %0A%0A`;\n      if (this.elemPhoneNumber) message += `<b>${this.elemPhoneNumber.placeholder}:</b> ${this.elemPhoneNumber.value}%0A`;\n      if (this.elemEmail) message += `<b>${this.elemEmail.placeholder}:</b> ${this.elemEmail.value}%0A`;\n      if (this.elemName) message += `<b>${this.elemName.placeholder}:</b> ${this.elemName.value}%0A`;\n      if (this.elemCity) message += `<b>${this.elemCity.placeholder}:</b> ${this.elemCity.value}%0A`;\n      if (this.elemWarehouseIndex) message += `<b>${this.elemWarehouseIndex.placeholder}:</b> ${this.elemWarehouseIndex.value}%0A`;\n      if (this.elemDescription) message += `<b>${this.elemDescription.placeholder}:</b> ${this.elemDescription.value}%0A`;\n      console.log(message);\n      // fetch(`https://api.telegram.org/bot${this.botTelegramToken}/sendMessage?chat_id=${this.telegramChatId}&parse_mode=html&text=${message}`);\n        // .then((res) => {\n        //   form.innerHTML = `<h2 style=\"color: white;\">\n        //   <big>Спасибо за оформление заявки!</big> <br />\n        //   Наш менеджер свяжется с Вами в ближайшее время.\n        //   </h2>`;\n        // })\n        // .catch((error) => {\n        //   form.innerHTML = `\n        //   <h2 style=\"color: white;\">Извините, что-то пошло не так </h2><br />\n        //   <h3 style=\"color: white; font-size: 20px;\">Попробуйте повторить попытку чуть позже или связаться с нами по контактам</h3><br />\n        //   <br />\n        //   <h3>Kод ошибки: ${error.code}</h3>\n        //   <p>${error}</p>`;\n        // });\n    })\n  }\n\n  initiatoryStatePhoneNumber() {\n    this.elemPhoneNumber.value = '+38 (___) ___-__-__';\n    this.elemPhoneNumber.pattern = `\\\\+38\\\\s\\\\(0\\\\d{2}\\\\)\\\\s\\\\d{3}-\\\\d{2}-\\\\d{2}`;\n    this.phoneNumberValue = '';\n  }\n\n  initiatoryStateEmail() {\n    this.elemEmail.pattern = `.+@.+\\\\..+`;\n\n    this.elemEmail.addEventListener('input', () => {\n      APIForn.addValidColor(this.elemEmail);\n    });\n  }\n\n  createElemListCity() {\n    this.elemListCity = document.createElement('datalist');\n\n    this.elemListCity.id = 'listCitiesNP';\n\n    this.elemForm.appendChild(this.elemListCity);\n  }\n\n  createElemListWarehouses() {\n    this.elemListWarehouses = document.createElement('datalist');\n\n    this.elemListWarehouses.id = 'listWarehouseNP';\n\n    this.elemForm.appendChild(this.elemListWarehouses);\n  }\n\n  updateListCity(listCitiesNP) {\n    this.elemListCity.innerHTML = '';\n    this.listRefCities = [];\n\n    if (listCitiesNP.length === 1) {\n      this.listRefCities = [listCitiesNP[0].DeliveryCity];\n\n      this.elemCity.pattern = '[А-Яа-яЁё\\s]+$';\n      this.elemWarehouseIndex.disabled = false;\n      return;\n    }\n\n    listCitiesNP.map(city => {\n      const elemOption = document.createElement('option');\n      elemOption.value = city.Present;\n\n      console.log(city.DeliveryCity);\n\n      this.listRefCities.push(city.DeliveryCity);\n\n\n      this.elemListCity.appendChild(elemOption);\n    });\n\n    this.elemCity.pattern = '[^0-9A-Za-z]{1,3}\\\\.[^0-9A-Za-z]{2,}'\n    this.elemWarehouseIndex.disabled = true;\n  }\n\n  updateListWarehouses(filterlistWarehouses) {\n    this.elemListWarehouses.innerHTML = '';\n\n    filterlistWarehouses.map(warehouse => {\n      const elemOption = document.createElement('option');\n\n      elemOption.value = warehouse.Description;\n\n      this.elemListWarehouses.appendChild(elemOption);\n    });\n  };\n\n  async getCitiesFromNP () {\n    const data = {\n      \"apiKey\": this.apiKeyNovaPoshta,\n      \"modelName\": \"Address\",\n      \"calledMethod\": \"searchSettlements\",\n      \"methodProperties\": {\n          \"CityName\": this.elemCity.value,\n          \"Limit\": 20,\n      }\n    };\n    \n    const requestOptions = {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      redirect: 'follow',\n      body: JSON.stringify(data),\n    };\n\n    await fetch('https://api.novaposhta.ua/v2.0/json/', requestOptions)\n      .then(response => response.json())\n      .then(result => result.data)\n      .then(data => data[0].Addresses)\n      .then(cities => cities.filter(city => city.Warehouses))\n      .then(cities => this.updateListCity(cities))\n      .catch(error => console.log('error', error));\n  }\n\n  async getWarehousesFromNP() {\n    const data = {\n      \"apiKey\": this.apiKeyNovaPoshta,\n      \"modelName\": \"Address\",\n      \"calledMethod\": \"getWarehouses\",\n      \"methodProperties\": {\n          \"CityRef\": this.listRefCities[0],\n      }\n    };\n    \n    const requestOptions = {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: JSON.stringify(data),\n    };\n\n    await fetch('http://testapi.novaposhta.ua/v2.0/json/Address/searchSettlements/', requestOptions)\n      .then(response => response.json())\n      .then(result => result.data)\n      .then(result => this.listWarehousesNP = result)\n      .catch(error => console.log('error', error));\n  }\n\n  filterWritelistWarehouses() {\n    const filterlistWarehouses = this.listWarehousesNP.filter(warehouse => {\n      const num = (warehouse.Number + '').slice(0, this.elemWarehouseIndex.value.length);\n\n      return num === this.elemWarehouseIndex.value;\n    })\n    this.updateListWarehouses(filterlistWarehouses);\n  }\n\n  initiatoryStateCity() {\n    this.elemCity.pattern = '[^0-9A-Za-z]{1,3}\\\\.[^0-9A-Za-z]{2,}';\n    // this.elemCity.validity.valid = true;\n    this.elemCity.title = 'Впишіть назву вашого населеного пункту і виберіть один із запропонованих варіантів';\n\n    if (this.apiKeyNovaPoshta) { \n      this.createElemListCity();\n\n      this.elemCity.addEventListener('onChange', () => console.log('change'));\n      \n      this.elemCity.addEventListener('input', async () => {\n        const regexp = /[а-яё]+$/i;\n        if (this.elemCity.value.length > 2 && regexp.test(this.elemCity.value)){\n          await this.getCitiesFromNP();\n\n          APIForn.addValidColor(this.elemCity);\n        }\n      });\n    } \n\n    this.elemCity.addEventListener('input', () => {\n      APIForn.addValidColor(this.elemCity);\n    });\n  }\n\n  initiatoryStateName() {\n    this.elemName.pattern = '[A-Za-zА-Яа-яЁё\\\\s]{2,}';\n\n    this.elemName.addEventListener('input', () => {\n      APIForn.addValidColor(this.elemName);\n    });\n  }\n\n  initiatoryStateDescription() {\n    this.elemDescription.addEventListener('input', () => {\n      APIForn.addValidColor(this.elemDescription);\n    });\n  }\n\n  initiatoryStateWarehouseIndex() {\n    if (this.apiKeyNovaPoshta) {\n      this.elemWarehouseIndex.title = 'Спочатку виберіть ваше місто, потім впишіть номер відділеннь нової пошти і оберіть один їх предложеннх варіантів';\n\n      this.createElemListWarehouses();\n\n      this.elemWarehouseIndex.addEventListener('focus', () => {\n        if(this.listRefCities && this.listRefCities.length === 1) this.getWarehousesFromNP();\n      });\n\n      this.elemWarehouseIndex.addEventListener('input', () => {\n        if(this.listWarehousesNP.length) this.filterWritelistWarehouses();\n      });\n    } \n\n    this.elemWarehouseIndex.addEventListener('input', () => {\n      APIForn.addValidColor(this.elemWarehouseIndex);\n    });\n  }\n\n  // initiatoryStateArea() {\n  //   this.elemArea.pattern = '[А-Яа-яЁё\\\\s]{2,}';\n\n  //   this.elemArea.addEventListener('input', () => {\n  //     APIForn.addValidColor(this.elemArea);\n  //   });\n  // }\n\n\n  inut() {\n    if (this.elemPhoneNumber) {\n      this.initiatoryStatePhoneNumber();\n      this.addListnerOnPhoneNumber();\n    };\n    if(this.telegramChatId && this.botTelegramToken) {\n      this.addListnerOnSubmit();\n    }\n    if(this.elemEmail) {\n      this.initiatoryStateEmail();\n    }\n    if(this.elemCity) {\n      this.initiatoryStateCity();\n    }\n    if(this.elemName) {\n      this.initiatoryStateName();\n    }\n    if(this.elemDescription) {\n      this.initiatoryStateDescription();\n    }\n    if(this.elemWarehouseIndex) {\n      this.initiatoryStateWarehouseIndex();\n          this.elemWarehouseIndex.disabled = true;\n    }\n    // if(this.elemArea) {\n    //   this.initiatoryStateArea();\n    // }\n  }\n}\n\nconst form = new APIForn({\n  elemForm: document.getElementById('order_form'),\n  botTelegramToken: '1045208272:AAF0mdAKIwIrKhzihkwjPcDYl4f0mxBWWdE',\n  telegramChatId: '-1001368260472',\n});\n\n// const form = new APIForn({\n//   elemForm: document.getElementById('form_for_buy'),\n//   botTelegramToken: '1045208272:AAF0mdAKIwIrKhzihkwjPcDYl4f0mxBWWdE',\n//   telegramChatId: '-1001368260472',\n//   apiKeyNovaPoshta: '1d7ec500b0973069fd5bcead06126c5f',\n// })\n","document.addEventListener('DOMContentLoaded', () => {\n  window.onload = () => {\n    setTimeout(() => {\n      document.getElementById('preloader').classList.remove('preloader');\n    }, 200);\n  }\n//   const form = document.getElementById('order_form');\n\n//   const productQuantityAdd = document.getElementById('product_quantity_add');\n//   productQuantityAdd.addEventListener('click', () => productQuantity.add() )\n\n//   const productQuantityRemove = document.getElementById('product_quantity_remove');\n//   productQuantityRemove.addEventListener('click', () => productQuantity.remove() )\n\n//   const formBuy = document.getElementById('form_for_buy');\n//   const blockThanks = document.getElementById('block_thanks');\n\n//   const token = '1044259808:AAF0EFWvyOUOPGBv69Jvpix1bexbzMLB9aY';\n//   const chatId = \"-336008217\";\n\n//   form.addEventListener('submit', e => {\n//     e.preventDefault();\n//     const message = `__________________________%0AУ товарища возник вопрос %0A<b>Имя:</b> ${e.target.name.value}%0A<b>Номер телефона:</b> ${e.target.phone.value}%0A__________________________`;\n\n//     fetch(`https://api.telegram.org/bot${token}/sendMessage?chat_id=${chatId}&parse_mode=html&text=${message}`)\n//       .then((res) => {\n//         console.log(res.json());\n//       })\n//       .catch((error) => {\n//         console.log(error);\n//       });\n      \n//   });\n\n\n\n//   class ProductQuantity {\n//     constructor(option) {\n//       this.onChange = option.onChange;\n//       this.onChangeSelectSize = option.onChangeSelectSize;\n//       this.onChangeSelectSizePants = option.onChangeSelectSizePants;\n\n//       this.quantity = 1;\n\n//       this.listSize = ['S', 'M', 'L', 'XL'];\n//       this.chosenSize = [];\n//       this.chosenSizePants = [];\n\n//       this.selectSize = this.selectSize.bind(this);\n//       this.selectSizePants = this.selectSizePants.bind(this);\n\n//       option.drawListSize(this.listSize);\n//       option.addListenerOnList(this.selectSize, this.selectSizePants);\n//     }\n\n//     selectSizePants(size) {\n//       this.chosenSizePants.unshift(size);\n\n//       this.chosenSizePants = this.chosenSizePants.slice(0, this.quantity);\n\n//       this.onChangeSelectSizePants(this.chosenSizePants);\n//     }\n\n//     selectSize(size) {\n//       this.chosenSize.unshift(size);\n\n//       this.chosenSize = this.chosenSize.slice(0, this.quantity);\n\n//       this.onChangeSelectSize(this.chosenSize);\n//     }\n\n//     add() {\n//       this.quantity += 1;\n//       this.saveCheange();\n//     }\n\n//     remove() {\n//       this.quantity -= this.quantity - 1 ? 1 : 0;\n\n//       this.chosenSizePants.pop();\n//       this.chosenSize.pop();\n\n//       this.saveCheange();\n//     }\n\n//     saveCheange() {\n//       this.onChange(this.quantity);\n\n//       this.onChangeSelectSizePants(this.chosenSizePants);\n//       this.onChangeSelectSize(this.chosenSize);\n//     }\n//   }\n\n//   const elemListSize = document.getElementById('form_list_size');\n//   const elemListSizePants = document.getElementById('form_list_size_pants');\n\n//   const elemQuantity = document.getElementById('product_quantity');\n//   const formPrice = document.getElementById('form_price');\n//   const sectionBuy = document.getElementById('section_buy');\n\n\n//   document.getElementById('btn_buy').addEventListener('click', () => {\n//     sectionBuy.classList.add('section_buy_active');\n//     formBuy.classList.remove('form_for_buy_none');\n//   })\n\n//   document.getElementById('form_buy_btn_closse').addEventListener('click', () => {\n//     sectionBuy.classList.remove('section_buy_active');\n//   })\n\n//   const productQuantity = new ProductQuantity({\n//     onChange: (quantity) => {\n//       elemQuantity.innerHTML = quantity;\n//       formPrice.innerHTML = quantity * 699;\n//     },\n//     drawListSize: (listSize) => {\n//       listSize.forEach((elem) => {\n//         elemListSize.innerHTML += `<li>${elem}</li>`;\n//         elemListSizePants.innerHTML += `<li>${elem}</li>`;\n//       });\n//     },\n//     addListenerOnList: (func, funcPants) => {\n//         for (let i = 0; i < elemListSize.children.length; i++) {\n//         elemListSize.children[i].addEventListener('click', e => func(e.target.innerHTML));\n//         elemListSizePants.children[i].addEventListener('click', e => funcPants(e.target.innerHTML));;\n//       }\n//     },\n//     onChangeSelectSize: arrSelect => {\n//       for (let i = 0; i < elemListSize.children.length; i++) {\n//         elemListSize.children[i].classList.remove('form_item_size_active');\n//       }\n\n//       arrSelect.forEach(elem => {\n//         for (let i = 0; i < elemListSize.children.length; i++) {\n//           const elemItemSize = elemListSize.children[i];\n\n//           if(elemItemSize.innerHTML === elem) {\n//             elemItemSize.classList.add('form_item_size_active');\n//           };\n//         }\n//       });\n\n//     },\n//     onChangeSelectSizePants: arrSelect => {\n//       for (let i = 0; i < elemListSizePants.children.length; i++) {\n//         elemListSizePants.children[i].classList.remove('form_item_size_active');\n//       }\n\n//       arrSelect.forEach(elem => {\n//         for (let i = 0; i < elemListSizePants.children.length; i++) {\n//           const elemItemSize = elemListSizePants.children[i];\n\n//           if(elemItemSize.innerHTML === elem) {\n//             elemItemSize.classList.add('form_item_size_active');\n//           };\n//         }\n//       });\n\n//     }\n//   });\n\n\n//   formBuy.addEventListener('submit', e => {\n//     e.preventDefault();\n//     const message = `__________________________%0A<b>Имя Фамилия:</b> ${e.target.buy_name.value}%0A<b>Номер телефона:</b> ${e.target.bay_phone.value}%0A<b>Город:</b> ${e.target.city.value}%0A<b>Отделение НП:</b> ${e.target.indexWarehouse.value}%0A<b>Количество:</b> ${productQuantity.quantity}%0A<b>Размер худи:</b> ${productQuantity.chosenSize.toString()}%0A<b>Размер штанов:</b> ${productQuantity.chosenSizePants.toString()}%0A<b>Стоимость:</b> ${formPrice.innerText}%0A_______________________________`;\n\n//     fetch(`https://api.telegram.org/bot${token}/sendMessage?chat_id=${chatId}&parse_mode=html&text=${message}`)\n//       .then((res) => {\n//         formBuy.classList.add('form_for_buy_none');\n//         blockThanks.classList.remove('block_thanks_none');\n//         document.getElementById('block_thanks_massage').innerHTML = `\n//               Имя Фамилия:&emsp; <big>${e.target.buy_name.value}</big> <br>\n//               Номер телефона:&emsp; <big>${e.target.bay_phone.value}</big> <br>\n//               Город:&emsp; <big>${e.target.city.value}</big> <br>\n//               № Отделение Новой Почты:&emsp; <big>${e.target.indexWarehouse.value}</big> <br>\n//               Количество:&emsp; <big>${productQuantity.quantity}</big> <br>\n//               Размер штанов:&emsp; <big>${productQuantity.chosenSizePants.toString()}</big> <br>\n//               Размер худи:&emsp; <big>${productQuantity.chosenSize.toString()}</big> <br>\n//               Стоимость:&emsp; <big>${formPrice.innerText} грн</big> <br>`;\n\n//           document.getElementById('block_thanks_closse').addEventListener('click', () => {\n//             blockThanks.classList.add('block_thanks_none');\n//             document.getElementById('section_buy').classList.remove('section_buy_active');\n//           })\n\n//           document.getElementById('return').addEventListener('click', () => {\n//             blockThanks.classList.add('block_thanks_none');\n//             formBuy.classList.remove('form_for_buy_none');\n//           })\n//       })\n//       .catch((error) => {\n//         alert(error);\n//       });\n      \n//   });\n\n// document.getElementById('body').addEventListener('click', (e) => {\n//   if(e.target.id === 'phone_menu' || e.target.id === 'btn_phone_menu' ) {\n//   } else {\n//     console.log('closse');\n//     phoneMenu.classList.remove('phone_menu_active');\n//     btnMenu.classList.remove('btn_phone_menu_active');\n//   };\n// });\n\n// section_buy{\n\n  // console.dir(window.innerHeight);\n  // console.dir(window.outerHeight);\n  // console.dir(window.clientHeight);\n\n  // console.dir(elem);\n  // console.log(elem.clientHeight);\n  // console.log(elem.offsetTop);\n  // console.log(elem.classList);\n  // console.log(elem.id);\n  // console.log((elem.clientHeight + elem.offsetTop) - (window.scrollY + 81));\n  // console.log(window.scrollY + window.innerHeight - elem.offsetTop);\n  // console.log('             ');\n  const\n      headlineQuestion = document.getElementById('headline_question'),\n      orderForm = document.getElementById('order_form'),\n      description = document.getElementById('description'),\n      headline = document.getElementById('headline'),\n      accessories = document.getElementById('accessories'),\n      specifications = document.getElementById('specifications');\n\n  const isVisible = (elem) => {\n  const \n      up = (elem.clientHeight + elem.offsetTop) - (window.scrollY + 81) > 100,\n      down = window.scrollY + window.innerHeight - elem.offsetTop > 250;\n\n  if (up && down) {\n      elem.classList.add(`${elem.id}_active`);\n  } else {\n      elem.classList.remove(`${elem.id}_active`);\n  }\n\n  return up && down;\n}\n\nwindow.onscroll = () => {\n    isVisible(headlineQuestion);\n    isVisible(description);\n    isVisible(headline);\n    isVisible(orderForm);\n    isVisible(accessories);\n    isVisible(specifications);\n}\n\n\n// phone_btn_order\n// btn_order\n\n// section_buy\nconst btnAsk = document.getElementById('btn_ask');\nconst btnBuy = document.getElementById('btn_order');\n\nconst postAlert = () => {\n  let check = true;\n\n  const call = (func, delay) => {\n    setTimeout(() => {\n      if(check) func();\n    }, delay);\n  }\n\n  const timerStart = () => {\n    call(() => btnAsk.classList.add('btn_ask_alert'), 2000);\n    call(() => btnAsk.classList.remove('btn_ask_alert'), 7000);\n    call(() => btnBuy.classList.add('btn_order_alert'), 12000);\n    call(() => btnBuy.classList.remove('btn_order_alert'), 17000);\n    setTimeout(timerStart, 40000);\n  };\n  timerStart();\n\n  btnAsk.addEventListener('mouseover', () => {\n    btnBuy.classList.remove('btn_order_alert');\n    btnAsk.classList.add('btn_ask_alert');\n    check = false;\n  });\n\n  btnAsk.addEventListener('mouseout', () => {\n    btnAsk.classList.remove('btn_ask_alert');\n    check = true;\n  });\n\n  btnBuy.addEventListener('mouseover', () => {\n    btnAsk.classList.remove('btn_ask_alert');\n    btnBuy.classList.add('btn_order_alert');\n      check = false;\n    });\n  \n  btnBuy.addEventListener('mouseout', () => {\n    btnBuy.classList.remove('btn_order_alert');\n    check = true;\n  });\n}\n\npostAlert();\n\n\n\n//###################### section buy ##############################\nconst sectionBuy = document.getElementById('section_buy');\nconst phoneBtnBuy = document.getElementById('phone_btn_order');\nconst btnClosseBuy = document.getElementById('form_buy_btn_closse');\n\nphoneBtnBuy.addEventListener('click', () => {\n  sectionBuy.classList.remove('section_buy_closse');\n})\n\nbtnBuy.addEventListener('click', () => {\n  sectionBuy.classList.remove('section_buy_closse');\n})\n\nbtnClosseBuy.addEventListener('click', () => {\n  sectionBuy.classList.add('section_buy_closse');\n})\n\n//###################### phone menu ##############################\n\n  const btnMenu = document.getElementById('btn_phone_menu')\n  const phoneMenu = document.getElementById('phone_menu');\n  const listNavPhoneMenu = phoneMenu.children[0].children;\n\n  for (let i = 0; i < listNavPhoneMenu.length; i++) {\n    listNavPhoneMenu[i].addEventListener('click', () => {\n      phoneMenu.classList.remove('phone_menu_active');\n    })\n  }\n\n  btnMenu.addEventListener('click', () => {\n    btnMenu.classList.toggle('btn_phone_menu_active');\n    phoneMenu.classList.toggle('phone_menu_active');\n  });\n\n});\n\nimport './slider';\nimport './API_form';\nimport '../style/base.scss';"]}